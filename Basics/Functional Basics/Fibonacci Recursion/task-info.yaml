type: edu
files:
- name: src/FibonacciTask.scala
  visible: true
  placeholders:
  - offset: 59
    length: 3
    placeholder_text: ???
    initial_state:
      length: 3
      offset: 63
    initialized_from_dependency: false
    selected: true
    status: Solved
    encrypted_possible_answer: "def fun: Int => Int = depth => {\n\t\t\tif (depth\
      \ < 2) depth\n\t\t\telse fun(depth - 1) + fun(depth - 2)\n\t\t}\n\n\t\tfun"
  text: "object FibonacciTask {\n\n\tdef fibonacciImpl(): Int => Int = {\n\t\t???\n\
    \t}\n}"
  learner_created: false
- name: build.sbt
  visible: false
  text: |
    scalaSource in Compile := baseDirectory.value / "src"
    scalaSource in Test := baseDirectory.value / "test"
    libraryDependencies += "org.scalatest" %% "scalatest" % "3.2.3"
  learner_created: false
- name: test/FibonacciTaskTestSpec.scala
  visible: false
  text: |
    import org.scalatest.funsuite.AnyFunSuite

    import scala.util.Random

    class FibonacciTaskTestSpec extends AnyFunSuite {

      test("Check Impl Correctness for depth 0") {
        assert(FibonacciTask.fibonacciImpl()(0) == 0, "fib(0) should be equal to 0")
      }

      test("Check Impl Correctness for depth 1") {
        assert(FibonacciTask.fibonacciImpl()(1) == 1, "fib(1) should be equal to 1")
      }

      test("Check Impl Correctness for depth 2") {
        assert(FibonacciTask.fibonacciImpl()(2) == 1, "fib(2) should be equal to 1")
      }

      test("Check Impl Correctness for depth 5") {
        assert(FibonacciTask.fibonacciImpl()(5) == 5, "fib(5) should be equal to 5")
      }

      test("Check Impl Correctness for Random Value") {
        val random = new Random()
        val depth = (random nextInt 10) + 1

        assertFibImpl(FibonacciTask.fibonacciImpl(), depth)
      }

      def assertFibImpl(fibImpl: Int => Int, depth: Int) {
        assert(
          fibImpl(depth - 1) + fibImpl(depth) == fibImpl(depth + 1),
          s"""fib($depth-1) plus fib($depth) should be equal to fub($depth + 1)""")
      }
    }
  learner_created: false
status: Solved
feedback:
  message: Congratulations!
  time: Thu, 07 Oct 2021 20:31:40 UTC
record: -1
